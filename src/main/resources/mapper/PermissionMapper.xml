<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kim.nzxy.auth.models.system.permission.PermissionMapper">
    <resultMap id="BaseResultMap" type="kim.nzxy.auth.models.system.permission.Permission">
        <!--@mbg.generated-->
        <!--@Table permission-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="button" jdbcType="VARCHAR" property="button"/>
        <result column="text" jdbcType="VARCHAR" property="text"/>
        <result column="port" jdbcType="VARCHAR" property="port"/>
        <result column="router" jdbcType="INTEGER" property="router"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, button, `text`, port, router, remark
    </sql>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="kim.nzxy.auth.models.system.permission.Permission" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into permission (button, `text`, port,
        router, remark)
        values (#{button,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{port,jdbcType=VARCHAR},
        #{router,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
    </insert>

    <!--auto generated by MybatisCodeHelper on 2019-12-30-->
    <select id="getByRouter" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where router=#{router,jdbcType=INTEGER}
    </select>

    <!--auto generated by MybatisCodeHelper on 2019-12-30-->
    <delete id="deleteById">
        delete
        from permission
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <select id="getAllByUserId" resultMap="BaseResultMap">
        select p.*
        from user u
                 left join user_role ur on u.id = ur.user
                 left join role_permission rp on ur.role = rp.role
                 left join permission p on rp.permission = p.id
        where u.id = #{userId,jdbcType=INTEGER}
          and p.id &gt; 0
    </select>

    <!--auto generated by MybatisCodeHelper on 2019-12-31-->
    <update id="updateById">
        update permission
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=INTEGER},
            </if>
            <if test="updated.button != null and updated.button != ''">
                button = #{updated.button,jdbcType=VARCHAR},
            </if>
            <if test="updated.text != null and updated.text != ''">
                text = #{updated.text,jdbcType=VARCHAR},
            </if>
            <if test="updated.port != null and updated.port != ''">
                port = #{updated.port,jdbcType=VARCHAR},
            </if>
            <if test="updated.router != null">
                router = #{updated.router,jdbcType=INTEGER},
            </if>
            <if test="updated.remark != null and updated.remark != ''">
                remark = #{updated.remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id=#{id,jdbcType=INTEGER}
    </update>
    <select id="getButtonByUserId" resultType="java.lang.String">
        select p.button
        from user u
                 left join user_role ur on u.id = ur.user
                 left join role_permission rp on ur.role = rp.role
                 left join permission p on rp.permission = p.id
        where u.id = #{userId,jdbcType=INTEGER}
          and p.id &gt; 0
    </select>
    <select id="getPortByUserId" resultType="java.lang.String">
        select p.port
        from user u
                 left join user_role ur on u.id = ur.user
                 left join role_permission rp on ur.role = rp.role
                 left join permission p on rp.permission = p.id
        where u.id = #{userId,jdbcType=INTEGER}
          and p.id &gt; 0
    </select>

</mapper>
